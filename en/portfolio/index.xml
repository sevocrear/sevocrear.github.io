<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Portfolios on sevocrear</title>
    <link>https://sevocrear.github.io/en/portfolio/</link>
    <description>Recent content in Portfolios on sevocrear</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://sevocrear.github.io/en/portfolio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Are people wearing masks in the photo?</title>
      <link>https://sevocrear.github.io/en/portfolio/mask_detector_23_jan_2022/</link>
      <pubDate>Sun, 23 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sevocrear.github.io/en/portfolio/mask_detector_23_jan_2022/</guid>
      <description>In general, I decided to do this project because I was interested in TensorFlow API, so the task is interesting at least from the learning point of view.
So, next was done:
 Study lots of sources, as well as videos regarding work with the TensorFlow Object Detection API, as well as the specifics of mask detection. This task could be done in two steps as well as one. Neural network selection Csv file of dataset annotations fixes Annotation error correction + dataset conversion into compatible tfrecord format Pre-trained neural network training Results analysis Experiments  The following experiments were performed:</description>
    </item>
    
    <item>
      <title>How to determine if tomatoes are ripe</title>
      <link>https://sevocrear.github.io/en/portfolio/ripe_tomatoes_detection/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://sevocrear.github.io/en/portfolio/ripe_tomatoes_detection/</guid>
      <description>The dataset was compiled using images from the Internet. In total, 500 images of tomatoes were collected. To increase the number of images, augmentation was applied. So, I enlarged the number of pictures in 1.5 times.
The roboflow service was used to annotate the dataset:
For the inference, a method was written in Python and a GUI was prepared.
Below you can see examples of how the program works:</description>
    </item>
    
    <item>
      <title>MOEX Telegram Bot</title>
      <link>https://sevocrear.github.io/en/portfolio/telegram_bot_moex/</link>
      <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://sevocrear.github.io/en/portfolio/telegram_bot_moex/</guid>
      <description>I decided to use *.npy file in order to store users IDs and max value of the stock they&amp;rsquo;d like to see in the chat. So, the idea was to constrain the price of the stocks for certain users. After that, MySQL could be implemented.
The example result of the bot output you can see above.
Also, it should be mentioned that the bot could be deployed on the server in order to be fully automated.</description>
    </item>
    
  </channel>
</rss>
